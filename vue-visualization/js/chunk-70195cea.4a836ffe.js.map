{"version":3,"sources":["webpack:///./src/views/svg/SvgDemo007.vue?828b","webpack:///src/views/svg/SvgDemo007.vue","webpack:///./src/views/svg/SvgDemo007.vue?e0ac","webpack:///./src/views/svg/SvgDemo007.vue","webpack:///./src/mixins/demo-page-mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","span","_v","xmlns","version","x","y","fill","staticStyle","width","height","id","d","stroke","stroke-width","cx","cy","r","font-size","font","text-anchor","dx","dy","staticRenderFns","SvgDemo007vue_type_script_lang_js_","name","mixins","demo_page_mixin","data","step","pointIndex","points","created","addIntervalHandler","addPoint","methods","_this","maxCnt","point","index","push","length","slice","forEach","cur","computed","computedPoints","_this2","pointStrs","offset","concat","join","svg_SvgDemo007vue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","showLifeCircleLog","intervalHandlers","beforeCreate","console","log","$route","path","beforeMount","mounted","beforeDestroy","clearIntervals","destroyed","func","time","handler","setInterval","clearInterval"],"mappings":"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","file":"js/chunk-70195cea.4a836ffe.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo-page svg-demo\"},[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('h4',[_vm._v(\"下的例子定义了一条路径，它开始于位置150 0，到达位置75 200，然后从那里开始到225 200，最后在150 0关闭路径。\")])]),_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticClass:\"svg__wrapper\"},[_c('svg',{staticClass:\"show-border\",attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"version\":\"1.1\"}},[_c('text',{attrs:{\"x\":\"0\",\"y\":\"15\",\"fill\":\"red\"}},[_vm._v(\"I love SVG\")])])])]),_c('el-col',{attrs:{\"span\":24}},[_c('h4',[_vm._v(\" 下面的例子创建了一个二次方贝塞尔曲线，A 和 C 分别是起点和终点，B 是控制点：\")])]),_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticClass:\"svg__wrapper\"},[_c('svg',{staticClass:\"show-border\",staticStyle:{\"width\":\"500px\",\"height\":\"500px\"},attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"version\":\"1.1\"}},[_c('path',{attrs:{\"id\":\"lineAB\",\"d\":\"M 100 350 l 150 -300\",\"stroke\":\"red\",\"stroke-width\":\"3\",\"fill\":\"none\"}}),_c('path',{attrs:{\"id\":\"lineBC\",\"d\":\"M 250 50 l 150 300\",\"stroke\":\"red\",\"stroke-width\":\"3\",\"fill\":\"none\"}}),_c('path',{attrs:{\"d\":\"M 175 200 l 150 0\",\"stroke\":\"green\",\"stroke-width\":\"3\",\"fill\":\"none\"}}),_c('path',{attrs:{\"d\":\"M 100 350 q 150 -300 300 0\",\"stroke\":\"blue\",\"stroke-width\":\"5\",\"fill\":\"none\"}}),_c('g',{attrs:{\"stroke\":\"black\",\"stroke-width\":\"3\",\"fill\":\"black\"}},[_c('circle',{attrs:{\"id\":\"pointA\",\"cx\":\"100\",\"cy\":\"350\",\"r\":\"3\"}}),_c('circle',{attrs:{\"id\":\"pointB\",\"cx\":\"250\",\"cy\":\"50\",\"r\":\"3\"}}),_c('circle',{attrs:{\"id\":\"pointC\",\"cx\":\"400\",\"cy\":\"350\",\"r\":\"3\"}})]),_c('g',{attrs:{\"font-size\":\"30\",\"font\":\"sans-serif\",\"fill\":\"black\",\"stroke\":\"none\",\"text-anchor\":\"middle\"}},[_c('text',{attrs:{\"x\":\"100\",\"y\":\"350\",\"dx\":\"-30\"}},[_vm._v(\"A\")]),_c('text',{attrs:{\"x\":\"250\",\"y\":\"50\",\"dy\":\"-10\"}},[_vm._v(\"B\")]),_c('text',{attrs:{\"x\":\"400\",\"y\":\"350\",\"dx\":\"30\"}},[_vm._v(\"C\")])])])])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"demo-page svg-demo\">\r\n    <el-row>\r\n      <el-col :span=\"24\">\r\n        <h4>下的例子定义了一条路径，它开始于位置150 0，到达位置75 200，然后从那里开始到225 200，最后在150 0关闭路径。</h4>\r\n      </el-col>\r\n\r\n      <el-col :span=\"24\">\r\n        <div class=\"svg__wrapper\" >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"show-border\">\r\n            <text x=\"0\" y=\"15\" fill=\"red\">I love SVG</text>\r\n          </svg>\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"24\">\r\n        <h4> 下面的例子创建了一个二次方贝塞尔曲线，A 和 C 分别是起点和终点，B 是控制点：</h4>\r\n      </el-col>\r\n      <el-col :span=\"24\">\r\n        <div class=\"svg__wrapper\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"show-border\" style=\"width:500px; height:500px;\">\r\n            <path id=\"lineAB\" d=\"M 100 350 l 150 -300\" stroke=\"red\" stroke-width=\"3\" fill=\"none\" />\r\n            <path id=\"lineBC\" d=\"M 250 50 l 150 300\" stroke=\"red\"   stroke-width=\"3\" fill=\"none\" />\r\n            <path d=\"M 175 200 l 150 0\" stroke=\"green\" stroke-width=\"3\" fill=\"none\" />\r\n            <path d=\"M 100 350 q 150 -300 300 0\" stroke=\"blue\" stroke-width=\"5\" fill=\"none\" />\r\n            <!-- Mark relevant points -->\r\n            <g stroke=\"black\" stroke-width=\"3\" fill=\"black\">\r\n              <circle id=\"pointA\" cx=\"100\" cy=\"350\" r=\"3\" />\r\n              <circle id=\"pointB\" cx=\"250\" cy=\"50\" r=\"3\" />\r\n              <circle id=\"pointC\" cx=\"400\" cy=\"350\" r=\"3\" />\r\n            </g>\r\n            <!-- Label the points -->\r\n            <g font-size=\"30\" font=\"sans-serif\" fill=\"black\" stroke=\"none\"\r\n               text-anchor=\"middle\">\r\n              <text x=\"100\" y=\"350\" dx=\"-30\">A</text>\r\n              <text x=\"250\" y=\"50\" dy=\"-10\">B</text>\r\n              <text x=\"400\" y=\"350\" dx=\"30\">C</text>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/*\r\n * <path> 元素用于定义一个路径。\r\n * 下面的命令可用于路径数据：\r\n * M = moveto\r\n * L = lineto\r\n * H = horizontal lineto\r\n * V = vertical lineto\r\n * C = curveto\r\n * S = smooth curveto\r\n * Q = quadratic Bézier curve\r\n * T = smooth quadratic Bézier curveto\r\n * A = elliptical Arc\r\n * Z = closepath\r\n * 注意：以上所有命令均允许小写字母。大写表示绝对定位，小写表示相对定位。\r\n */\r\nimport DemoPageMixin from '@/mixins/demo-page-mixin'\r\nexport default {\r\n  name: 'SVGDemo007',\r\n  mixins: [DemoPageMixin],\r\n  data () {\r\n    return {\r\n      step: 5,\r\n      pointIndex: 0,\r\n      points: []\r\n    }\r\n  },\r\n  created () {\r\n    this.addIntervalHandler(this.addPoint, 150)\r\n  },\r\n  methods: {\r\n    addPoint () {\r\n      // test\r\n      this.pointIndex = this.pointIndex + 1\r\n      const maxCnt = (300 / this.step)\r\n      const point = { index: this.pointIndex, x: 300, y: 150 }\r\n      if ((this.pointIndex + 1) % 5 === 0) {\r\n        point.y = 200\r\n      }\r\n      if (this.pointIndex % 5 === 0) {\r\n        point.y = 100\r\n      }\r\n      this.points.push(point)\r\n      if (this.points.length > maxCnt) {\r\n        this.points = this.points.slice(1)\r\n      }\r\n      if (this.pointIndex === maxCnt) {\r\n        this.points.forEach((cur) => {\r\n          cur.x = cur.x - this.pointIndex * this.step\r\n        })\r\n        this.pointIndex = 0\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    computedPoints () {\r\n      const pointStrs = []\r\n      let offset = this.pointIndex * this.step\r\n      this.points.forEach((cur) => {\r\n        pointStrs.push(`${cur.x + cur.index * this.step - offset},${cur.y}`)\r\n      })\r\n      return pointStrs.join(' ')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SvgDemo007.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SvgDemo007.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SvgDemo007.vue?vue&type=template&id=94a7110a&scoped=true&\"\nimport script from \"./SvgDemo007.vue?vue&type=script&lang=js&\"\nexport * from \"./SvgDemo007.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"94a7110a\",\n  null\n  \n)\n\ncomponent.options.__file = \"SvgDemo007.vue\"\nexport default component.exports","export default {\r\n  data () {\r\n    return {\r\n      showLifeCircleLog: true,\r\n      intervalHandlers: []\r\n    }\r\n  },\r\n  beforeCreate () {\r\n    if (this.showLifeCircleLog) console.log(`===== ${this.$route.path} beforeCreate =====`)\r\n  },\r\n  created () {\r\n    if (this.showLifeCircleLog) console.log(`===== ${this.$route.path} created =====`)\r\n  },\r\n  beforeMount () {\r\n    if (this.showLifeCircleLog) console.log(`===== ${this.$route.path} beforeMount =====`)\r\n  },\r\n  mounted () {\r\n    if (this.showLifeCircleLog) console.log(`===== ${this.$route.path} mounted =====`)\r\n  },\r\n  // beforeUpdate () {\r\n  //   console.log(`===== ${this.$route.path} beforeUpdate =====`)\r\n  // },\r\n  // updated () {\r\n  //   console.log(`===== ${this.$route.path} updated =====`)\r\n  // },\r\n  beforeDestroy () {\r\n    if (this.showLifeCircleLog) console.log(`===== ${this.$route.path} beforeDestroy =====`)\r\n    this.clearIntervals()\r\n  },\r\n  destroyed () {\r\n    if (this.showLifeCircleLog) console.log(`===== ${this.$route.path} destroyed =====`)\r\n  },\r\n  methods: {\r\n    addIntervalHandler (func, time) {\r\n      let handler = setInterval(func, time)\r\n      this.intervalHandlers.push(handler)\r\n    },\r\n    clearIntervals () {\r\n      for (let handler in this.intervalHandlers) {\r\n        clearInterval(handler)\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}